/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FormImport } from './routes/form'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonNameImport } from './routes/pokemon.$name'
import { Route as FormStepImport } from './routes/form.$step'

// Create/Update Routes

const FormRoute = FormImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonNameRoute = PokemonNameImport.update({
  id: '/pokemon/$name',
  path: '/pokemon/$name',
  getParentRoute: () => rootRoute,
} as any)

const FormStepRoute = FormStepImport.update({
  id: '/$step',
  path: '/$step',
  getParentRoute: () => FormRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormImport
      parentRoute: typeof rootRoute
    }
    '/form/$step': {
      id: '/form/$step'
      path: '/$step'
      fullPath: '/form/$step'
      preLoaderRoute: typeof FormStepImport
      parentRoute: typeof FormImport
    }
    '/pokemon/$name': {
      id: '/pokemon/$name'
      path: '/pokemon/$name'
      fullPath: '/pokemon/$name'
      preLoaderRoute: typeof PokemonNameImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface FormRouteChildren {
  FormStepRoute: typeof FormStepRoute
}

const FormRouteChildren: FormRouteChildren = {
  FormStepRoute: FormStepRoute,
}

const FormRouteWithChildren = FormRoute._addFileChildren(FormRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form': typeof FormRouteWithChildren
  '/form/$step': typeof FormStepRoute
  '/pokemon/$name': typeof PokemonNameRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form': typeof FormRouteWithChildren
  '/form/$step': typeof FormStepRoute
  '/pokemon/$name': typeof PokemonNameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/form': typeof FormRouteWithChildren
  '/form/$step': typeof FormStepRoute
  '/pokemon/$name': typeof PokemonNameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/form' | '/form/$step' | '/pokemon/$name'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/form' | '/form/$step' | '/pokemon/$name'
  id: '__root__' | '/' | '/about' | '/form' | '/form/$step' | '/pokemon/$name'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  FormRoute: typeof FormRouteWithChildren
  PokemonNameRoute: typeof PokemonNameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  FormRoute: FormRouteWithChildren,
  PokemonNameRoute: PokemonNameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/form",
        "/pokemon/$name"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/form": {
      "filePath": "form.tsx",
      "children": [
        "/form/$step"
      ]
    },
    "/form/$step": {
      "filePath": "form.$step.tsx",
      "parent": "/form"
    },
    "/pokemon/$name": {
      "filePath": "pokemon.$name.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
